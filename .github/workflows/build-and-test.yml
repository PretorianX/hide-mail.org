name: Build and Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
      
    - name: Install specific Jest versions
      run: |
        npm install --save-dev jest@29.5.0 jest-environment-jsdom@29.5.0
        npm install --save-dev @babel/preset-env @babel/preset-react babel-jest@29.5.0
    
    - name: Create mock files
      run: |
        mkdir -p src/__mocks__
        echo "module.exports = {};" > src/__mocks__/styleMock.js
        echo "module.exports = 'test-file-stub';" > src/__mocks__/fileMock.js
    
    - name: Create Jest config
      run: |
        cat > jest.config.cjs << 'EOL'
        /** @type {import('jest').Config} */
        module.exports = {
          testEnvironment: "jsdom",
          transform: {
            "^.+\\.(js|jsx|ts|tsx)$": "babel-jest"
          },
          transformIgnorePatterns: [
            "node_modules/(?!(axios|@faker-js)/)"
          ],
          moduleNameMapper: {
            "\\.(css|less|scss|sass)$": "<rootDir>/src/__mocks__/styleMock.js",
            "\\.(gif|ttf|eot|svg|png)$": "<rootDir>/src/__mocks__/fileMock.js"
          }
        };
        EOL
        
        cat > babel.config.js << 'EOL'
        module.exports = {
          presets: [
            '@babel/preset-env',
            ['@babel/preset-react', {runtime: 'automatic'}]
          ]
        };
        EOL
    
    - name: Run tests
      run: NODE_ENV=test jest --config=jest.config.cjs
    
    - name: Build frontend
      run: npm run build
      env:
        CI: true
        
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: build/
        
  backend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: backend
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run backend tests
      run: npm test
      
  docker:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: hide-mail-frontend:latest
        
    - name: Build backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: hide-mail-backend:latest 