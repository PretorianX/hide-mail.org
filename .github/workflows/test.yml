name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
      
    - name: Install test dependencies
      run: |
        npm install --save-dev @babel/preset-env @babel/preset-react babel-jest
        npm install --save-dev jest jest-environment-jsdom
    
    - name: Create test config
      run: |
        cat > jest.config.cjs << 'EOL'
        /** @type {import('jest').Config} */
        const config = {
          verbose: true,
          testEnvironment: "jsdom",
          testEnvironmentOptions: {
            resources: 'usable',
            runScripts: 'dangerously',
            html: "<!DOCTYPE html><html><head></head><body></body></html>",
            url: "http://localhost",
            pretendToBeVisual: true
          },
          transformIgnorePatterns: [
            "node_modules/(?!(axios|@faker-js)/)"
          ],
          transform: {
            "^.+\\.(js|jsx|ts|tsx)$": "babel-jest"
          },
          moduleNameMapper: {
            "\\.(css|less|scss|sass)$": "<rootDir>/src/__mocks__/styleMock.js",
            "\\.(gif|ttf|eot|svg|png)$": "<rootDir>/src/__mocks__/fileMock.js"
          }
        };

        module.exports = config;
        EOL
        
        mkdir -p src/__mocks__
        echo "module.exports = {};" > src/__mocks__/styleMock.js
        echo "module.exports = 'test-file-stub';" > src/__mocks__/fileMock.js
        
        cat > babel.config.js << 'EOL'
        module.exports = {
          presets: [
            '@babel/preset-env',
            ['@babel/preset-react', {runtime: 'automatic'}]
          ]
        };
        EOL
    
    - name: Run tests
      run: NODE_OPTIONS=--experimental-vm-modules npx jest --config=jest.config.cjs 